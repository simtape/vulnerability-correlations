import json
import requests
from dotenv import load_dotenv

FOLDER_PACKAGES = "data/packages"
BASE_URL = "https://public.vulnerablecode.io/api/"
headers = {"Authentication": load_dotenv("API_KEY")}

"""
extracts, from a json containing all packages in the db of vulnerablecode.io, 
only the base names of the pkgs(ex. pkg:alpine).
saves on json the list of the names.
"""


def extract_packages_names() -> None:
    try:
        f = open(FOLDER_PACKAGES + 'all-packages.json')
    except FileNotFoundError:
        print("File not existing")

    packages = json.load(f)
    pkg_names = []

    for package in packages:
        pkg_name = ""
        print(package)
        idx = 0
        while package[idx] != "/":
            pkg_name = pkg_name + package[idx]
            idx += 1

        if pkg_name not in pkg_names:
            pkg_names.append(pkg_name)

    with open(FOLDER_PACKAGES + "packages-names.json", "w") as outfile:
        json.dump(pkg_names, outfile)


"""
GET request to vulnerablecode api
by name of the package
"""


def get_package_data_by_name(pkg_name: str) -> dict:
    pkg_url = BASE_URL + "packages/all/"
    params = {"name": pkg_name}
    response = requests.get(url=pkg_url, headers=headers, params=params)
    return response


def get_all_packages_by_names() -> None:
    try:
        f = open(FOLDER_PACKAGES + 'packages-names.json')
    except FileNotFoundError:
        print("File not existing")

    pkg_names = json.load(f)

    for pkg_name in pkg_names:
        response = get_package_data_by_name(pkg_name)
        with open(pkg_name + ".json", "w") as outfile:
            outfile.write(response.json())
